import Head from 'next/head'
import  { useRouter } from 'next/router'
import { getOneProduct, addToCart, writeProductReview } from "../../firebase/customerActions"
import { useEffect, useState } from 'react'
import { logout } from '../../firebase/auth'
import { auth } from '../../firebase/config'
import Link from 'next/link'
import Nav from '../../components/nav'
import { onAuthStateChanged } from 'firebase/auth'


export default function Home() {
  const [productName, setProductName] = useState("")
  const [productImage, setProductImage] = useState("")
  const [productPrice, setProductPrice] = useState(0)
  const [reviews, setReviews] = useState<any[]>([])
  const [product, setProduct] = useState({})
  const [rating, setRating] = useState(0.0)
  const [userID, setUserID] = useState("")
  const [productID, setProductId] = useState("")
  const [userRating, setUserRating] = useState(0.0)
  const [writeReview, setWriteReview] = useState(false)
  const [reviewText, setReviewText] = useState("")


  const router = useRouter()
  
  const toggleReview = () => {
    setWriteReview(prev => !prev)
  }

  const changeRating = (e: any) => {
    setUserRating(e.target.value)
    console.log(userRating)
  }

  const changeUserReviewText = (e: any) => {
    setReviewText(e.target.value)
  }

  const postReview = () => {
    writeProductReview(productID, userRating, {review: reviewText, rating: userRating})
    setWriteReview(false)
  }


  useEffect(() => {
    let productUid;
    

    if(router.isReady){
      const { productId } = router.query
      
      setProductId(String(productId))
      productUid = productId
      getOneProduct(productUid).then((res) => {
       console.log(res)
        setProductName(res?.productName)
        setProductImage(res?.productImage)
        setProductPrice(+res?.productPrice)
        setReviews(res?.reviews)
        setRating(res?.rating)
        setProduct({
          id: productId,
          productName: res?.productName,
          productImage: res?.productImage,
          productPrice: +res?.productPrice,
          rating: res?.rating,
          reviews: res?.reviews
        })
        
      })
    }
  }, [])

  useEffect(() => {
    onAuthStateChanged(auth, (user) => {
      if(user){
        setUserID(user.uid)
      }
      else{
        console.log("No user")
      }
    })

  }, [])


  console.log("product", product)
  return (
    <div>
      <Head>
        <title>KeyBoard Shop</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      
      <Nav />
      <div className = "flex flex-col gap-[9] lg:flex-row mt-[100px] place-items-center">
        <div className = "text-center  lg:place-items-center">
          <img className = "lg:ml-[100px]" src = {productImage}></img>
          
          {writeReview ? 
          <div className = "flex flex-col">
            <input placeholder='Rating' inputMode='numeric' type='number' step = "0.1" min = "0" max="5" onChange={changeRating} className = 'border border-black mb-1' value = {userRating}></input>
            <textarea placeholder='Write Review' value = {reviewText} onChange = {changeUserReviewText} className = 'border border-black'></textarea>
            <button onClick={postReview}>Post Review</button>
          </div> : 
          <>
          <button onClick={toggleReview}>Write Review</button>
          </>}
        </div>
        <div className = "flex flex-col gap-12 text-center lg:ml-[25%]">
          <div className = "">
            <h1 className = "text-5xl lg:text-7xl mb-5">{productName}</h1>
            <h1 className = "text-3xl lg:text-5xl">${productPrice}</h1>
          </div> 
          <div className = "flex flex-col place-items-center">
            <button onClick={() => {addToCart(userID, product, productID)}} className = "bg-black text-white w-[70%] h-[50px] sm:w-[100%] sm:h-[70px] lg:w-[482px] lg:h-[81px] rounded-lg mb-[3%]">Add To Cart</button>
            <button className = "bg-green-500 text-white w-[70%] h-[50px] sm:w-[100%] sm:h-[70px] lg:w-[482px] lg:h-[81px] rounded-lg mb-[10%]">Buy Now</button>
            <h1>{rating}</h1>
            {reviews.length === 0 ? "No reviews" : 
            <>
            {reviews.map(review => {
              return(
                <div className = "flex flex-col">
                  <h1>{review.review}</h1>
                
                 <h2>{review.rating}</h2>
                </div>
              )
            })}
            </>
            }
          </div>
        </div>    
      </div>
    </div>
    
  )
}


export async function getServerSideProps(context: any){
  console.log(context.params)
  return {props: {"hello": "world"}}
}
